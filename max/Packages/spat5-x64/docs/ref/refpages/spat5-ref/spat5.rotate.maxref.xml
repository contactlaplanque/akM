<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- created by libisp v5.0.2 - 18-mar-2024 19:03:59 -->

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>


<c74object name="spat5.rotate" module="spat5">
  <digest>Rotate coordinate messages</digest>
  <description><o>spat5.rotate</o> applies rotation to source, speaker or listener coordinate messages.<br/><o>spat5.scale</o>, <o><o>spat5.rotate</o></o> and <o>spat5.translate</o> are stateless objects i.e. they only react when incoming position messages are received.<br/>On the other hand, spat5.transform is statefull: it keeps track of the state of the spatial scene, and will deliver the transformed scene whenever the parameter (yaw, pitch, roll, offset, etc.) is changed.<br/><br/></description>
  <inletlist>
  </inletlist>
  <outletlist>
  </outletlist>
  <objarglist>
  </objarglist>
  <attributelist>
    <attribute name="initwith" type="string" set="1" get="1" size="1">
      <description>The <m> initwith </m> attribute can be used to specify the initial state of the object. You should provide a list of comma-separated OSC commands. The list of messages should be quoted (with double quote character &quot;). This is similar to sending the list of commands via <o>loadbang</o> or <o>loadmess</o>.<br/> Have a look at the <i>spat5.tuto-osc-3.maxpat</i> example for further details.<br/> Note that the <m> initwith </m> attribute cannot be set via message, <o>attrui</o> or inspector; it must be typed directly within the object box.</description>
      <digest>initial state of the object</digest>
    </attribute>
  </attributelist>
  <methodlist>
    <method name="/yaw">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set yaw rotation angle.</description>
      <digest>set yaw rotation angle</digest>
    </method>
    <method name="/pitch">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set pitch rotation angle.</description>
      <digest>set pitch rotation angle</digest>
    </method>
    <method name="/roll">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set roll rotation angle.</description>
      <digest>set roll rotation angle</digest>
    </method>
    <method name="/ypr">
      <arglist>
        <arg type="number][number][number"/>
      </arglist>
      <description>set yaw, pitch and roll rotation angles.</description>
      <digest>set yaw, pitch and roll rotation angles</digest>
    </method>
    <method name="/orientation">
      <arglist>
        <arg type="number][number][number][number"/>
      </arglist>
      <description>set rotation angles from quaternion.</description>
      <digest>set rotation angles from quaternion</digest>
    </method>
  </methodlist>
  <seealsolist>
    <seealso name="spat5.transform"/>
    <seealso name="spat5.scale"/>
    <seealso name="spat5.translate"/>
    <seealso name="spat5.normalize"/>
    <seealso name="spat5.viewer"/>
    <seealso name="spat5.converter"/>
    <seealso name="spat5.abs2rel"/>
    <seealso name="spat5.jitter"/>
    <seealso name="spat5.trajectories"/>
    <seealso name="spat5.overview"/>
  </seealsolist>
</c74object>

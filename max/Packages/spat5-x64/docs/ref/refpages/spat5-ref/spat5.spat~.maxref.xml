<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- created by libisp v5.0.2 - 18-mar-2024 19:03:59 -->

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>


<c74object name="spat5.spat~" module="spat5">
  <digest>LE Spatialisateur</digest>
  <description><o>spat5.spat~</o> is a configurable real-time spatial processor integrating the localization of sound events with room acoustic quality. The <o>spat5.spat~</o> combines several DSP modules in a flexible framework. This includes a reverberator engine (based on spat5.early~, spat5.cluster~, spat5.reverb~, spat5.room~); the reverberated signals are then panned in space (this panning stage is based on the spat5.pan~ object). Direct sound signal (so-called 'axis') and reverberated signals (so-called 'omni') can be filtered with 3-band shelving filters (based on spat5.hlshelf~). Additionnally, Doppler effect and air absorption filtering can be simulated (they're based on spat5.source~, spat5.air~, spat5.doppler~, etc). Spatial, temporal, and spectral parameters can be controlled by the spat5.oper graphical user interface.<br/><br/>Reference(s) : <br/>J.-M. Jot. Real-time spatial processing of sounds for music, multimedia and interactive human-computer interfaces. ACM Multimedia Systems Journal (Special issue on Audio and Multimedia), 7(1):55 -- 69, 1999. <br/><br/> J.-M. Jot and O. Warusfel. A real-time spatial sound processor for music and virtual reality applications. In Proc. of the International Computer Music Conference (ICMC), pages 294 -- 295, Banff, 1995. <br/><br/> T. Carpentier, M. Noisternig, and O. Warusfel. Twenty Years of Ircam Spat: Looking Back, Looking Forward. In Proc. of the 41st International Computer Music Conference (ICMC), pages 270 -- 277, Denton, TX, USA, Sept. 2015. <br/><br/> T. Carpentier. A new implementation of Spat in Max. In Proc. of the 15th Sound and Music Computing Conference (SMC), pages 184 -- 191, Limassol, Cyprus, July 2018. <br/><br/> T. Carpentier. Spat: a comprehensive toolbox for sound spatialization in Max. In Ideas Sonicas, Vol 13(24), pages 12 -- 23, June 2021.<br/><br/></description>
  <inletlist>
  </inletlist>
  <outletlist>
  </outletlist>
  <objarglist>
  </objarglist>
  <attributelist>
    <attribute name="initwith" type="string" set="1" get="1" size="1">
      <description>The <m> initwith </m> attribute can be used to specify the initial state of the object. You should provide a list of comma-separated OSC commands. The list of messages should be quoted (with double quote character &quot;). This is similar to sending the list of commands via <o>loadbang</o> or <o>loadmess</o>.<br/> Have a look at the <i>spat5.tuto-osc-3.maxpat</i> example for further details.<br/> Note that the <m> initwith </m> attribute cannot be set via message, <o>attrui</o> or inspector; it must be typed directly within the object box.</description>
      <digest>initial state of the object</digest>
    </attribute>
    <attribute name="inputs" type="int" set="1" get="1" size="1">
      <description>The <m> inputs </m> attribute represents the number of input channels of the object. This  attribute must be set in the object box, when the object is instantiated; it can not be later set with a message (or <o>attrui</o> or inspector), since  the number of signal inlets or outlets can not be changed dynamically.</description>
      <digest>number of input channels</digest>
    </attribute>
    <attribute name="internals" type="int" set="1" get="1" size="1">
      <description>The <m> internals </m> attribute represents the number of internal channels of the artificial reverberator. <br/> Spat uses a Feedback Delay Network (FDN) reverberator engine. <br/> Basically this can be seen as an array of delay lines which are fed back into a mixing matrix. The <m> internals </m> attributes represents the size of the feedback matrix. <br/> Choosing the size of this matrix is a trade-off between CPU consumption and the echo density. <br/> Increasing the size of the matrix will generate a densier reverb tail at the expense of a higher CPU load. <br/> A typical value of 8 is a good compromise between CPU load and natural sounding reverb. A value of 16 may be useful especially when dealing with a very long reverberation time or with very percussive sound (where a smaller FDN might sometimes sounds too poor). <br/> It is recommended not to use a value below 6. </description>
      <digest>number of internal (reverberation) channels</digest>
    </attribute>
    <attribute name="mc" type="int" set="1" get="1" size="1">
      <description>The <m> mc </m> attribute enables multichannel patch-cord for this object (compatible with Max8 or higher). Note that the <m> mc </m> attribute cannot be set via message, <o>attrui</o> or inspector; it must be typed directly within the object box.</description>
      <digest>multichannel patch-cord</digest>
    </attribute>
    <attribute name="mode" type="string" set="1" get="1" size="1">
      <description>The <m> mode </m> attribute is used to specify the &quot;input type&quot; of each source. <o>spat5.spat~</o> supports mono and stereo input sources.<br/><br/> Note that the <m> mode </m> attribute cannot be set via message, <o>attrui</o> or inspector; it must be typed directly within the object box.<br/><br/>Possible syntax:<br/>@mode &quot;mono&quot; : all sources are mono (default)<br/>@mode &quot;stereo&quot; : all sources are stereo<br/>@mode &quot;mono mono stereo&quot; : a list of modes for each of the 3 sources<br/>You can also use the shorthand notation : @mode &quot;m m s&quot;<br/>@mode &quot;mono 2 stereo 1&quot; : 2 mono sources, followed by 1 stereo source<br/>You can also use the shorthand notation : @mode &quot;m 2 s 1&quot;</description>
      <digest>source mode</digest>
    </attribute>
    <attribute name="outputs" type="int" set="1" get="1" size="1">
      <description>The <m> outputs </m> attribute represents the number of output channels of the object. This  attribute must be set in the object box, when the object is instantiated; it can not be later set with a message (or <o>attrui</o> or inspector), since  the number of signal inlets or outlets can not be changed dynamically.</description>
      <digest>number of output channels</digest>
    </attribute>
    <attribute name="parameter_enable" type="boolean" set="1" get="1" size="1">
      <description>The <m> parameter_enable </m> attribute is used for compatibility with Max snapshots. It can also be used to store the initial state of the object (see 'Initial Enable' in the Max inspector).</description>
      <digest>compatibility with snapshots</digest>
    </attribute>
    <attribute name="rooms" type="int" set="1" get="1" size="1">
      <description>The <m> rooms </m> attribute represents the number of shared late reverbs. It can not be changed dynamically (via message or <o>attrui</o> or inspector).</description>
      <digest>number of shared late reverbs</digest>
    </attribute>
  </attributelist>
  <methodlist>
    <method name="/panning/type">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set panning type i.e. the type of algorithm used for rendering. A wide variety of panning methods are available, but there may be constraints depending on the number of inputs and/or outputs channels. <br/><br/>- &quot;binaural&quot; : binaural synthesis using HRTF (Head-Related Transfer Functions) filtering, for headphones only.<br/>- &quot;xy&quot; : simulates the recording of the sound scene by a coincident XY couple of microphones (intensity panning), for stereo only.<br/>- &quot;ms&quot; : simulates the recording of the sound scene by a mid-side microphone; this generates the M-S signals, and further requires decoding for L-R compatibility.<br/>- &quot;ab&quot; : simulates the recording of the sound scene by an AB couple of microphones (ORTF) i.e. it simulates a pair of spaced cardioid microphones, pointing laterally at azimuths +/- 55 degrees (elevation 0), with a distance of 17 cm between the two capsules; for stereo only.<br/>- &quot;stereopan&quot; : stereo panpot (intensity panning) with various panning laws, for stereo only.<br/>- &quot;angular&quot; : angular panning (intensity panning) for 2-D (horizontal only)  loudspeaker setups. &quot;angular&quot; panning is essentially the same as &quot;vbap2d&quot;, the main difference is how the panning gains evolve when moving the source from one speaker to another.<br/>- &quot;abap2d&quot; : angle-based amplitude panning : pairwise amplitude panning for 2-D (horizontal only) loudspeaker setups. Provides linear panning vs target azimuth angle.<br/>- &quot;abip2d&quot; : angle-based intensity panning : pairwise intensity panning for 2-D (horizontal only) loudspeaker setups. &quot;abip2d&quot; panning is essentially the same as &quot;vbip2d&quot;, the main difference is how the panning gains evolve when moving the source from one speaker to another.<br/>- &quot;vbap2d&quot; : vector base amplitude panning : pairwise amplitude panning for 2-D (horizontal only) loudspeaker setups, with power normalization of the gains.<br/>- &quot;vbap3d&quot; : vector base amplitude panning : amplitude panning for 3-D loudspeaker setups. The underlying algorithm creates a triangulation of the loudspeaker array, and depending on the position of the virtual source, it selects the appropriate loudspeaker triplet.<br/>- &quot;vbip2d&quot; : vector base intensity panning : pairwise intensity panning for 2-D (horizontal only)  loudspeaker setups. The geometrical algorithm is similar to &quot;vbap2d&quot;, however the speaker signals are normalized with constant intensity (rather than with constant power).<br/>- &quot;vbip3d&quot; : vector base intensity panning : pairwise intensity panning for 3-D loudspeaker setups. The geometrical algorithm is similar to &quot;vbap3d&quot;, however the speaker signals are normalized with constant intensity (rather than with constant power).<br/>- &quot;vbap&quot; : vector base amplitude panning : will switch automatically between &quot;vbap3d&quot; or &quot;vbap2d&quot;, depending on the loudspeaker setup.<br/>- &quot;vbip&quot; : vector base intensity panning : will switch automatically between &quot;vbip3d&quot; or &quot;vbip2d&quot;, depending on the loudspeaker setup.<br/>- &quot;dualbandvbp&quot; : vector base panning : uses vbap for low frequencies and vbip for high frequencies. (either 2-D or 3-D speaker setup)<br/>- &quot;lbap&quot; : layer based amplitude panning : this creates several vertical layers of loudspeakers, and operates each layer as a &quot;vbap2d&quot; setup. If the loudspeaker layout is planar, &quot;lbap&quot; is just the same as &quot;vbap2d&quot;.<br/>- &quot;sphericalheadmodel&quot; : binaural synthesis using an approximate spherical head model (Rayleigh) for both ILD and ITD. Elevation is not taken into account.<br/>- &quot;snowmanmodel&quot; : binaural synthesis using an approximate snow-man model for head-and-torso (two spherical models).<br/>- &quot;nearfieldbinaural&quot; : binaural synthesis using HRTF (Head-Related Transfer Functions) filtering, and with compensation (ITD and ILD) of nearfield effects.<br/>- &quot;hoa2d&quot; : 2-D (horizontal only) higher order ambisonic (HOA) encoder.<br/>- &quot;hoa3d&quot; : 3-D higher order ambisonic (HOA) encoder.<br/>- &quot;aep2d&quot; : ambisonic equivalent panning in 2-D (horizontal only) .<br/>- &quot;aep3d&quot; : ambisonic equivalent panning in 3-D.<br/>- &quot;spcap&quot; : speaker-placement correction amplitude panning.<br/>- &quot;nfchoa2d&quot; : 2-D (horizontal only) higher order ambisonic (HOA) encoder with Nearfield Compensation Filters (NFC).<br/>- &quot;nfchoa3d&quot; : 3-D higher order ambisonic (HOA) encoder with Nearfield Compensation Filters (NFC).<br/>- &quot;knn&quot; : K-nearest neighbors panning : applies amplitude panning on the K-nearest loudspeakers to the source. The (maximum) number K of contributing speakers can be specified with the &quot;/source/[index]/neighbors [int]&quot; message. This kind of panning is compatible with arbitrary loudspeaker setup (either 2D or 3D).<br/>- &quot;surround&quot; : LRS or LCRS encoder. Deprecated, don't use it.<br/>- &quot;panr&quot; : legacy panning law from spat v3.x. Deprecated, don't use it. Pair-wise panning over a regular arrangement of loudspeakers on a plane (2-D only).<br/>- &quot;dbap2d&quot; : distance-based amplitude panning on a 2-D (horizontal only) speaker setup (after Trond lossius).<br/>- &quot;dbap3d&quot; : .<br/>- &quot;subwoofers&quot; : combines a lowpass filter and a &quot;vbap2d&quot; panner.<br/>- &quot;wfs&quot; : wavefield synthesis for linear array of loudspeakers.<br/>- &quot;bformat&quot; : legacy Ambisonic B-format amplitude panning. Deprecated, don't use it anymore; use &quot;hoa2d&quot; or &quot;hoa3d&quot; instead.<br/>- &quot;laap&quot; : amplitude/intensity panning on a linear array of loudspeakers. Experimental prototype, don't use it.<br/><br/><br/>.<br/>Possible values: binaural, xy, ms, ab, stereopan, surround, panr, angular, abap2d, abip2d, dbap3d, dbap2d, vbap, vbip, vbap3d, vbip3d, vbap2d, vbap2damp, hybrid-vbap, vbip2d, dualbandvbp, bformat, hoa2d, hoa3d, nfchoa3d, nfchoa2d, spcap, csp, knn, aep2d, aep3d, subwoofers, wfs, lbap, laap, sphericalheadmodel, snowmanmodel, nearfieldbinaural.</description>
      <digest>set panning type</digest>
    </method>
    <method name="/source/[index]/xyz">
      <arglist>
        <arg type="number][number][number"/>
      </arglist>
      <description>set the position of the i-th source using cartesian coordinates.</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/aed">
      <arglist>
        <arg type="number][number][number"/>
      </arglist>
      <description>set the position of the i-th source using navigation coordinates (azimuth/elevation/distance).</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/xy">
      <arglist>
        <arg type="number][number"/>
      </arglist>
      <description>set the xy-coordinate of the i-th source, and use default z (=0).</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/xy_">
      <arglist>
        <arg type="number][number"/>
      </arglist>
      <description>set the x and y-coordinate of the i-th source, and keep z unchanged.</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/x">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the x-coordinate of the i-th source, and keep y and z unchanged.</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/y">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the y-coordinate of the i-th source, and keep x and z unchanged.</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/z">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the z-coordinate of the i-th source, and keep x and y unchanged.</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/az">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the azimuth of the i-th source, using default distance (=1) and elevation (=0).</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/ade">
      <arglist>
        <arg type="number][number][number"/>
      </arglist>
      <description>set the position of the i-th source using navigation coordinates (azimuth/distance/elevation).</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/ae">
      <arglist>
        <arg type="number][number"/>
      </arglist>
      <description>set the azimuth/elevation of the i-th source, using default distance (=1).</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/ad">
      <arglist>
        <arg type="number][number"/>
      </arglist>
      <description>set the azimuth/distance of the i-th source, using default elevation (=0).</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/azim">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the azimuth of the i-th source. Elevation and distance remain unchanged.</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/elev">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the elevation of the i-th source. Azimuth and distance remain unchanged.</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/dist">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the distance of the i-th source. Azimuth and elevation remain unchanged.</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/azimelev">
      <arglist>
        <arg type="number][number"/>
      </arglist>
      <description>set the azimuth and elevation of the i-th source. Distance remains unchanged.</description>
      <digest>set source position</digest>
    </method>
    <method name="/source/[index]/azimdist">
      <arglist>
        <arg type="number][number"/>
      </arglist>
      <description>set the azimuth and distance of the i-th source. Elevation remains unchanged.</description>
      <digest>set source position</digest>
    </method>
    <method name="/sources/aed">
      <arglist>
        <arg type="nnnn..."/>
      </arglist>
      <description>set the list of source coordinates (with aed format).</description>
      <digest>set source positions</digest>
    </method>
    <method name="/sources/xyz">
      <arglist>
        <arg type="nnnn..."/>
      </arglist>
      <description>set the list of source coordinates (with xyz format).</description>
      <digest>set source positions</digest>
    </method>
    <method name="/sources/ade">
      <arglist>
        <arg type="nnnn..."/>
      </arglist>
      <description>set the list of source coordinates (with ade format).</description>
      <digest>set source positions</digest>
    </method>
    <method name="/sources/xy">
      <arglist>
        <arg type="nnnn..."/>
      </arglist>
      <description>set the list of source coordinates (with xy format).</description>
      <digest>set source positions</digest>
    </method>
    <method name="/sources/ae">
      <arglist>
        <arg type="nnnn..."/>
      </arglist>
      <description>set the list of source coordinates (with ae format).</description>
      <digest>set source positions</digest>
    </method>
    <method name="/source/[index]/axis/G0">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the global gain (in dB) of axis filter for the i-th source.</description>
      <digest>set the global gain (in dB) of axis filter for the i-th source</digest>
    </method>
    <method name="/source/[index]/axis/Gl">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the low gain (in dB) of axis filter for the i-th source.</description>
      <digest>set the low gain (in dB) of axis filter for the i-th source</digest>
    </method>
    <method name="/source/[index]/axis/Gm">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the mid gain (in dB) of axis filter for the i-th source.</description>
      <digest>set the mid gain (in dB) of axis filter for the i-th source</digest>
    </method>
    <method name="/source/[index]/axis/Gh">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the high gain (in dB) of axis filter for the i-th source.</description>
      <digest>set the high gain (in dB) of axis filter for the i-th source</digest>
    </method>
    <method name="/source/[index]/axis/fl">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the low/mid crossover frequency (in Hz) of axis filter for the i-th source.</description>
      <digest>set the low/mid crossover frequency (in Hz) of axis filter for the i-th source</digest>
    </method>
    <method name="/source/[index]/axis/fh">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the mid/high crossover frequency (in Hz) of axis filter for the i-th source.</description>
      <digest>set the mid/high crossover frequency (in Hz) of axis filter for the i-th source</digest>
    </method>
    <method name="/source/[index]/axis/params">
      <arglist>
        <arg type="number][number][number][number][number][number"/>
      </arglist>
      <description>set the parameters of axis filter for the i-th source. Parameters are given as a list of [G0 Gl Gm Gh fl fh].</description>
      <digest>set the parameters of axis filter for the i-th source. Parameters are given as a list of [G0 Gl Gm Gh fl fh]</digest>
    </method>
    <method name="/source/[index]/omni/G0">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the global gain (in dB) of omni filter for the i-th source.</description>
      <digest>set the global gain (in dB) of omni filter for the i-th source</digest>
    </method>
    <method name="/source/[index]/omni/Gl">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the low gain (in dB) of omni filter for the i-th source.</description>
      <digest>set the low gain (in dB) of omni filter for the i-th source</digest>
    </method>
    <method name="/source/[index]/omni/Gm">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the mid gain (in dB) of omni filter for the i-th source.</description>
      <digest>set the mid gain (in dB) of omni filter for the i-th source</digest>
    </method>
    <method name="/source/[index]/omni/Gh">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the high gain (in dB) of omni filter for the i-th source.</description>
      <digest>set the high gain (in dB) of omni filter for the i-th source</digest>
    </method>
    <method name="/source/[index]/omni/fl">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the low/mid crossover frequency (in Hz) of omni filter for the i-th source.</description>
      <digest>set the low/mid crossover frequency (in Hz) of omni filter for the i-th source</digest>
    </method>
    <method name="/source/[index]/omni/fh">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the mid/high crossover frequency (in Hz) of omni filter for the i-th source.</description>
      <digest>set the mid/high crossover frequency (in Hz) of omni filter for the i-th source</digest>
    </method>
    <method name="/source/[index]/omni/params">
      <arglist>
        <arg type="number][number][number][number][number][number"/>
      </arglist>
      <description>set the parameters of omni filter for the i-th source. Parameters are given as a list of [G0 Gl Gm Gh fl fh].</description>
      <digest>set the parameters of omni filter for the i-th source. Parameters are given as a list of [G0 Gl Gm Gh fl fh]</digest>
    </method>
    <method name="/source/[index]/pres">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the source presence of the i-th source.</description>
      <digest>set source presence</digest>
    </method>
    <method name="/source/[index]/warmth">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the source warmth of the i-th source.</description>
      <digest>set source warmth</digest>
    </method>
    <method name="/source/[index]/bril">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the source brillance of the i-th source.</description>
      <digest>set source brillance</digest>
    </method>
    <method name="/source/[index]/prer">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the room presence of the i-th source.</description>
      <digest>set room presence</digest>
    </method>
    <method name="/source/[index]/revp">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the running reverberance of the i-th source.</description>
      <digest>set running reverberance</digest>
    </method>
    <method name="/source/[index]/env">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the envelopment of the i-th source.</description>
      <digest>set source envelopment</digest>
    </method>
    <method name="/source/[index]/yaw">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the yaw angle (in deg) of the i-th source.</description>
      <digest>set yaw angle</digest>
    </method>
    <method name="/source/[index]/pitch">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the pitch angle (in deg) of the i-th source.</description>
      <digest>set pitch angle</digest>
    </method>
    <method name="/source/[index]/aperture">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the aperture angle (in deg) of the i-th source.</description>
      <digest>set aperture angle</digest>
    </method>
    <method name="/source/[index]/early/width">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the early width angle (in deg) of the i-th source.</description>
      <digest>set early width angle</digest>
    </method>
    <method name="/source/[index]/early/shape">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the early shape (in %) of the i-th source.</description>
      <digest>set early shape</digest>
    </method>
    <method name="/source/[index]/panrev">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the panrev factor (in %) of the i-th source.</description>
      <digest>set panrev</digest>
    </method>
    <method name="/source/[index]/drop">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the drop factor (in dB) for the i-th source.</description>
      <digest>set the drop factor (in dB) for the i-th source</digest>
    </method>
    <method name="/source/[index]/drop/mode">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set the drop mode for the i-th source.<br/>Possible values: linear, log2.</description>
      <digest>set drop mode</digest>
    </method>
    <method name="/source/[index]/radius">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the radius (in meters) for the i-th source.</description>
      <digest>set the radius (in meters) for the i-th source</digest>
    </method>
    <method name="/source/[index]/air">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable/disable air absorption for the i-th source.</description>
      <digest>enable/disable air absorption for the i-th source</digest>
    </method>
    <method name="/source/[index]/air/freq">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set cutoff frequency (in Hz) for air absorption of the i-th source.</description>
      <digest>set cutoff frequency (in Hz) for air absorption of the i-th source</digest>
    </method>
    <method name="/source/[index]/air/distance">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set distance (in meters) for air absorption of the i-th source.</description>
      <digest>set distance (in meters) for air absorption of the i-th source</digest>
    </method>
    <method name="/source/[index]/doppler">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable/disable doppler filtering for the i-th source.</description>
      <digest>enable/disable doppler filtering for the i-th source</digest>
    </method>
    <method name="/source/[index]/mute">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>mute/unmute the i-th source.</description>
      <digest>mute source</digest>
    </method>
    <method name="/source/[index]/solo">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>solo/unsolo the i-th source.</description>
      <digest>solo source</digest>
    </method>
    <method name="/source/[index]/spread/mode">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set spread mode for the i-th source.</description>
      <digest>set spread mode for the i-th source</digest>
    </method>
    <method name="/source/[index]/spread/law">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set spread law for the i-th source.</description>
      <digest>set spread law for the i-th source</digest>
    </method>
    <method name="/source/[index]/spread/omni">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set omni spread (in %) for the i-th source.</description>
      <digest>set omni spread (in %) for the i-th source</digest>
    </method>
    <method name="/room/[index]/reverberance">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the reverberance of the i-th room.</description>
      <digest>set the reverberance of the i-th room</digest>
    </method>
    <method name="/room/[index]/heaviness">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the heaviness of the i-th room.</description>
      <digest>set the heaviness of the i-th room</digest>
    </method>
    <method name="/room/[index]/liveness">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the liveness of the i-th room.</description>
      <digest>set the liveness of the i-th room</digest>
    </method>
    <method name="/room/[index]/reverb/enable">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable/disable the i-th room.</description>
      <digest>enable/disable the i-th room</digest>
    </method>
    <method name="/room/[index]/reverb/infinite">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable/disable infinite reverb in the i-th room.</description>
      <digest>enable/disable infinite reverb in the i-th room</digest>
    </method>
    <method name="/room/[index]/reverb/fl">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the low/mid crossover frequency (in Hz) for the i-th room.</description>
      <digest>set the low/mid crossover frequency (in Hz) for the i-th room</digest>
    </method>
    <method name="/room/[index]/reverb/fh">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the mid/high crossover frequency (in Hz) for the i-th room.</description>
      <digest>set the mid/high crossover frequency (in Hz) for the i-th room</digest>
    </method>
    <method name="/room/[index]/reverb/start">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the reverb start (in msec) for the i-th room.</description>
      <digest>set the reverb start (in msec) for the i-th room</digest>
    </method>
    <method name="/room/[index]/reverb/density">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the reverb modal density for the i-th room.</description>
      <digest>set the reverb modal density for the i-th room</digest>
    </method>
    <method name="/room/[index]/air">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable/disable air absorption for the i-th room.</description>
      <digest>enable/disable air absorption for the i-th room</digest>
    </method>
    <method name="/room/[index]/air/freq">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set rolloff frequency (in Hz) for air absorption in the i-th room.</description>
      <digest>set rolloff frequency (in Hz) for air absorption in the i-th room</digest>
    </method>
    <method name="/parallel">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable multithread rendering.</description>
      <digest>multithreading</digest>
    </method>
    <method name="/dsp/mute">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>mute the DSP rendering. CPU resources are not used when the DSP is muted.  A smooth ramp is applied  (see /dsp/mute/ramptime).</description>
      <digest>mute DSP</digest>
    </method>
    <method name="/dsp/mute">
      <arglist>
        <arg type="boolean][number"/>
      </arglist>
      <description>mute the DSP rendering. CPU resources are not used when the DSP is muted.  A smooth ramp is applied; the second argument specifies the length (in msec) of the ramp.</description>
      <digest>mute DSP</digest>
    </method>
    <method name="/dsp/mute/ramptime">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set ramp time (in msec) for mute/unmute.</description>
      <digest>mute ramp time</digest>
    </method>
    <method name="/dsp/bypass">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>bypass the DSP rendering. CPU resources are not used when the DSP is bypassed.  A smooth ramp of is applied (see /dsp/bypass/ramptime).</description>
      <digest>bypass DSP</digest>
    </method>
    <method name="/dsp/bypass">
      <arglist>
        <arg type="boolean][number"/>
      </arglist>
      <description>mute the DSP rendering. CPU resources are not used when the DSP is muted.  A smooth ramp is applied; the second argument specifies the length (in msec) of the ramp.</description>
      <digest>bypass DSP</digest>
    </method>
    <method name="/dsp/bypass/ramptime">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set ramp time (in msec) for bypass.</description>
      <digest>bypass ramp time</digest>
    </method>
    <method name="/dsp/automute">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable/disable the auto-mute (i.e. disable audio computation when incoming signals are 0).</description>
      <digest>enable auto-mute</digest>
    </method>
    <method name="/dsp/automute/attack">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the duration (in seconds) before auto-muting.</description>
      <digest>auto-mute attack time</digest>
    </method>
    <method name="/dsp/post">
      <description>post various information to the Max console (audio should be turned on).</description>
      <digest>post information</digest>
    </method>
    <method name="/dsp/clear">
      <description>clear the internal state of the audio processor. In general, you don't have to send this message directly. This is done automatically whenever the Max audio settings change. Yet, you might want to use this message to clear the object's sample-memory in case of a blow-up.</description>
      <digest>clear the internal state</digest>
    </method>
    <method name="/dump/dsp/latency">
      <description>send the processor latency (in samples) through the dump outlet.</description>
      <digest>dump latency</digest>
    </method>
    <method name="/verbose">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set verbosity i.e. change the way information is posted to the Max console.<br/>Possible values: silent, minimal, normal, detailed.</description>
      <digest>set verbosity</digest>
    </method>
    <method name="/post/version">
      <description>print the version in the Max Console.</description>
      <digest>post version</digest>
    </method>
    <method name="/post/version">
      <arglist>
        <arg type="details"/>
      </arglist>
      <description>print detailed version in the Max Console.</description>
      <digest>post version</digest>
    </method>
    <method name="/post/doc">
      <description>print the help documentation in the Max Console.</description>
      <digest>post documentation</digest>
    </method>
    <method name="/post/state">
      <description>print the OSC status in the Max Console.</description>
      <digest>post current state</digest>
    </method>
    <method name="/preset/load">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>load a preset from file. Supported file extensions : '.txt' for human-readable OSC text file, '.osc' for binary encoded OSC file, '.coll' for human-readable Max coll file (compatible with the <o>coll</o> object). '.txt' is the default file format. You can specify the fullpath of the file, or only its filename if the file is inside Max search path.</description>
      <digest>load preset</digest>
    </method>
    <method name="/preset/load">
      <description>open a user dialog to load a preset file. Supported file extensions : '.txt' for human-readable OSC text file, '.osc' for binary encoded OSC file, '.coll' for human-readable Max coll file (compatible with the <o>coll</o> object). '.txt' is the default file format.</description>
      <digest>load preset</digest>
    </method>
    <method name="/preset/export">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>export a preset to file. Supported file extensions : '.txt' for human-readable OSC text file, '.osc' for binary encoded OSC file, '.coll' for human-readable Max coll file (compatible with the <o>coll</o> object). '.txt' is the default file format. If the file extension is not provided, '.txt' will be used by default.  If the destination folder is not provided, the file will be saved in your home folder (/Users/yourlogin).</description>
      <digest>export preset</digest>
    </method>
    <method name="/preset/export">
      <description>open a user dialog to export a preset to file. Supported file extensions : '.txt' for human-readable OSC text file, '.osc' for binary encoded OSC file, '.coll' for human-readable Max coll file (compatible with the <o>coll</o> object). '.txt' is the default file format.</description>
      <digest>export preset</digest>
    </method>
    <method name="/status">
      <description>open the status window and bring it to front.</description>
      <digest>open status window</digest>
    </method>
    <method name="/status/open">
      <description>open the status window and bring it to front.</description>
      <digest>open status window</digest>
    </method>
    <method name="/status/close">
      <description>close the status window.</description>
      <digest>close status window</digest>
    </method>
    <method name="/status/openorclose">
      <description>open the status window if it was closed; close it if it was opened.</description>
      <digest>open status window</digest>
    </method>
    <method name="/status/font/size">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the font size of the status window.</description>
      <digest>font size for status window</digest>
    </method>
    <method name="/status/floating">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>make the status window 'floating' (i.e. always on top of other windows).</description>
      <digest>statuswindow floating</digest>
    </method>
    <method name="/help">
      <description>open the help window and bring it to front.</description>
      <digest>open help window</digest>
    </method>
    <method name="/help/open">
      <description>open the help window and bring it to front.</description>
      <digest>open help window</digest>
    </method>
    <method name="/help/close">
      <description>close the help window.</description>
      <digest>close help window</digest>
    </method>
    <method name="/help/openorclose">
      <description>open the help window if it was closed; close it if it was opened.</description>
      <digest>open help window</digest>
    </method>
    <method name="/help/font/size">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the font size of the help window.</description>
      <digest>font size for help window</digest>
    </method>
    <method name="/help/floating">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>make the help window 'floating' (i.e. always on top of other windows).</description>
      <digest>helpwindow floating</digest>
    </method>
    <method name="/snapshot">
      <description>open the snapshot window and bring it to front.</description>
      <digest>open snapshot window</digest>
    </method>
    <method name="/snapshot/open">
      <description>open the snapshot window and bring it to front.</description>
      <digest>open snapshot window</digest>
    </method>
    <method name="/snapshot/close">
      <description>close the snapshot window.</description>
      <digest>close snapshot window</digest>
    </method>
    <method name="/snapshot/openorclose">
      <description>open the snapshot window if it was closed; close it if it was opened.</description>
      <digest>open snapshot window</digest>
    </method>
    <method name="/snapshot/font/size">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the font size of the snapshot window.</description>
      <digest>font size for snapshot window</digest>
    </method>
    <method name="/snapshot/floating">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>make the snapshot window 'floating' (i.e. always on top of other windows).</description>
      <digest>snapshotwindow floating</digest>
    </method>
    <method name="/status/copytoclipboard">
      <description>copy the status to (the OS) clipboard.</description>
      <digest>copy status to clipboard</digest>
    </method>
    <method name="/status/copytoclipboard">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>copy the status to (the OS) clipboard, and specify the end-of-line character (e.g. ',').</description>
      <digest>copy status to clipboard</digest>
    </method>
    <method name="/dump">
      <description>dump the complete state of the object over the rightmost outlet (a.k.a. dump outlet).</description>
      <digest>dump state</digest>
    </method>
    <method name="/dump">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>dump a subset of the state of the object over the rightmost outlet. See spat5.tuto-dump-1.maxpat for usage examples.</description>
      <digest>dump state</digest>
    </method>
    <method name="/snapshot/deleteall">
      <description>delete all the snapshots currently in memory.</description>
      <digest>clear snapshots</digest>
    </method>
    <method name="/snapshot/add">
      <description>create a new snapshot with the current state.</description>
      <digest>add a new snapshot</digest>
    </method>
    <method name="/snapshot/add">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>create a new snapshot with the current state, and set its name.</description>
      <digest>add a new snapshot</digest>
    </method>
    <method name="/snapshot/[index]/store">
      <description>store the current state in the i-th snapshot (in memory).</description>
      <digest>store snapshot</digest>
    </method>
    <method name="/snapshot/[index]/recall">
      <description>recall the current state from the i-th snapshot.</description>
      <digest>recall snapshot</digest>
    </method>
    <method name="/snapshot/[index]/jump">
      <description>immediately recall the current state from the i-th snapshot (ignoring recall time).</description>
      <digest>immediately recall snapshot</digest>
    </method>
    <method name="/snapshot/[index]/name">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set the name of the i-th snapshot.</description>
      <digest>set snapshot name</digest>
    </method>
    <method name="/snapshot/interpolate">
      <arglist>
        <arg type="int][int][number"/>
      </arglist>
      <description>interpolate between the i-th and j-th snapshots.</description>
      <digest>interpolate between two snapshots</digest>
    </method>
    <method name="/snapshot/interpolate">
      <arglist>
        <arg type="string][string][number"/>
      </arglist>
      <description>interpolate between two snapshots, given their names.</description>
      <digest>interpolate between two snapshots</digest>
    </method>
    <method name="/snapshot/[index]/delete">
      <description>delete the i-th snapshot.</description>
      <digest>delete snapshot</digest>
    </method>
    <method name="/snapshot/[index]/copytoclipboard">
      <description>copy the i-th snapshot to (the OS) clipboard.</description>
      <digest>copy snapshot to clipboard</digest>
    </method>
    <method name="/snapshot/[index]/copytoclipboard">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>copy the i-th snapshot to (the OS) clipboard, and specify the end-of-line character (e.g. ',').</description>
      <digest>copy snapshot to clipboard</digest>
    </method>
    <method name="/snapshot/[index]/export">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>export the i-th snapshot to file.</description>
      <digest>export snapshot</digest>
    </method>
    <method name="/snapshot/[index]/export/content">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>export the content of the i-th snapshot to file.</description>
      <digest>export snapshot content</digest>
    </method>
    <method name="/snapshot/export">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>export all snapshots to file.</description>
      <digest>export snapshots</digest>
    </method>
    <method name="/snapshot/import">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>import all snapshots from file.</description>
      <digest>export snapshots</digest>
    </method>
    <method name="/snapshot/recall/next">
      <description>recall the next snapshot.</description>
      <digest>recall next snapshot</digest>
    </method>
    <method name="/snapshot/recall/previous">
      <description>recall the previous snapshot.</description>
      <digest>recall previous snapshot</digest>
    </method>
    <method name="/snapshot/jump/next">
      <description>immediately recall the next snapshot (ignoring recall time).</description>
      <digest>immediately recall next snapshot</digest>
    </method>
    <method name="/snapshot/jump/previous">
      <description>immediately recall the previous snapshot (ignoring recall time).</description>
      <digest>immediately recall previous snapshot</digest>
    </method>
    <method name="/snapshot/recall">
      <arglist>
        <arg type="int"/>
      </arglist>
      <description>recall the i-th snapshot.</description>
      <digest>recall i-th snapshot</digest>
    </method>
    <method name="/snapshot/jump">
      <arglist>
        <arg type="int"/>
      </arglist>
      <description>immediately recall the i-th snapshot (ignoring recall time).</description>
      <digest>immediately recall i-th snapshot</digest>
    </method>
    <method name="/snapshot/recall/bytitle">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>recall a snapshot by title/name.</description>
      <digest>recall snapshot by title</digest>
    </method>
    <method name="/snapshot/jump/bytitle">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>immediately recall a snapshot by title/name (ignoring recall time).</description>
      <digest>immediately recall snapshot by title</digest>
    </method>
    <method name="/snapshot/lock">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>lock edition of the snapshots.</description>
      <digest>lock snapshots</digest>
    </method>
    <method name="/snapshot/renumber">
      <description>renumber the snapshots (their OSC pattern) based on their position.</description>
      <digest>renumber snapshots</digest>
    </method>
    <method name="/snapshot/sort">
      <description>sort the snapshots alphabetically (based on their titles).</description>
      <digest>sort snapshots alphabetically</digest>
    </method>
  </methodlist>
  <seealsolist>
    <seealso name="spat5.oper"/>
    <seealso name="spat5.viewer"/>
    <seealso name="spat5.early~"/>
    <seealso name="spat5.cluster~"/>
    <seealso name="spat5.reverb~"/>
    <seealso name="spat5.pan~"/>
    <seealso name="spat5.decoder~"/>
    <seealso name="spat5.delgen"/>
    <seealso name="spat5.ircamverb~"/>
    <seealso name="spat5.shuffle~"/>
    <seealso name="spat5.align~"/>
    <seealso name="spat5.panoramix~"/>
    <seealso name="spat5.panoramix"/>
    <seealso name="spat5.virtualspeakers~"/>
    <seealso name="spat5.hlshelf"/>
    <seealso name="spat5.hlshelf~"/>
    <seealso name="spat5.oper_"/>
    <seealso name="spat5.source~"/>
    <seealso name="spat5.room~"/>
    <seealso name="spat5.ctc~"/>
    <seealso name="spat5.trajectories"/>
    <seealso name="spat5.reverb.timeview"/>
    <seealso name="spat5.multi.connect"/>
    <seealso name="spat5.overview"/>
  </seealsolist>
</c74object>

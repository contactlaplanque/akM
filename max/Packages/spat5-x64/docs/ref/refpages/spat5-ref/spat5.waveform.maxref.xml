<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- created by libisp v5.0.2 - 18-mar-2024 19:03:59 -->

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>


<c74object name="spat5.waveform" module="spat5">
  <digest>Audio waveform display component</digest>
  <description><o>spat5.waveform</o> plots audio waveform(s).<br/><br/></description>
  <inletlist>
  </inletlist>
  <outletlist>
  </outletlist>
  <objarglist>
  </objarglist>
  <attributelist>
    <attribute name="embed" type="boolean" set="1" get="1" size="1">
      <description>The <m> embed </m> attribute allows to store the state of the object within the patcher. The complete state of the object is stored whenever the patcher is saved to disk. Upon loading the patcher or copying the object box, the state is restored.</description>
      <digest>store state within the patcher</digest>
    </attribute>
    <attribute name="initwith" type="string" set="1" get="1" size="1">
      <description>The <m> initwith </m> attribute can be used to specify the initial state of the object. You should provide a list of comma-separated OSC commands. The list of messages should be quoted (with double quote character &quot;). This is similar to sending the list of commands via <o>loadbang</o> or <o>loadmess</o>.<br/> Have a look at the <i>spat5.tuto-osc-3.maxpat</i> example for further details.<br/> Note that the <m> initwith </m> attribute cannot be set via message, <o>attrui</o> or inspector; it must be typed directly within the object box.</description>
      <digest>initial state of the object</digest>
    </attribute>
    <attribute name="parameter_enable" type="boolean" set="1" get="1" size="1">
      <description>The <m> parameter_enable </m> attribute is used for compatibility with Max snapshots. It can also be used to store the initial state of the object (see 'Initial Enable' in the Max inspector).</description>
      <digest>compatibility with snapshots</digest>
    </attribute>
  </attributelist>
  <methodlist>
    <method name="/title">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set title.</description>
      <digest>set title</digest>
    </method>
    <method name="/title/visible">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set visibility for title.</description>
      <digest>set title visibility</digest>
    </method>
    <method name="/title/color">
      <arglist>
        <arg type="color"/>
      </arglist>
      <description>set color for the title.</description>
      <digest>set title color</digest>
    </method>
    <method name="/title/justification">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set justification for the title.</description>
      <digest>set title justification</digest>
    </method>
    <method name="/title/font/size">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set font size for the title.</description>
      <digest>set title font size</digest>
    </method>
    <method name="/xlabel">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set xlabel.</description>
      <digest>set xlabel</digest>
    </method>
    <method name="/xlabel/visible">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set visibility for xlabel.</description>
      <digest>set xlabel visibility</digest>
    </method>
    <method name="/xlabel/color">
      <arglist>
        <arg type="color"/>
      </arglist>
      <description>set color for the xlabel.</description>
      <digest>set xlabel color</digest>
    </method>
    <method name="/xlabel/justification">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set justification for the xlabel.</description>
      <digest>set xlabel justification</digest>
    </method>
    <method name="/xlabel/font/size">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set font size for the xlabel.</description>
      <digest>set xlabel font size</digest>
    </method>
    <method name="/ylabel">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set ylabel.</description>
      <digest>set ylabel</digest>
    </method>
    <method name="/ylabel/visible">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set visibility for ylabel.</description>
      <digest>set ylabel visibility</digest>
    </method>
    <method name="/ylabel/color">
      <arglist>
        <arg type="color"/>
      </arglist>
      <description>set color for the ylabel.</description>
      <digest>set ylabel color</digest>
    </method>
    <method name="/ylabel/justification">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set justification for the ylabel.</description>
      <digest>set ylabel justification</digest>
    </method>
    <method name="/ylabel/font/size">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set font size for the ylabel.</description>
      <digest>set ylabel font size</digest>
    </method>
    <method name="/xtick">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set xtick.</description>
      <digest>set xtick</digest>
    </method>
    <method name="/xtick/visible">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set visibility for xtick.</description>
      <digest>set xtick visibility</digest>
    </method>
    <method name="/xtick/color">
      <arglist>
        <arg type="color"/>
      </arglist>
      <description>set color for the xtick.</description>
      <digest>set xtick color</digest>
    </method>
    <method name="/ytick">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set ytick.</description>
      <digest>set ytick</digest>
    </method>
    <method name="/ytick/visible">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set visibility for ytick.</description>
      <digest>set ytick visibility</digest>
    </method>
    <method name="/ytick/color">
      <arglist>
        <arg type="color"/>
      </arglist>
      <description>set color for the ytick.</description>
      <digest>set ytick color</digest>
    </method>
    <method name="/grid/visible">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set visibility for the grid.</description>
      <digest>set grid visibility</digest>
    </method>
    <method name="/grid/color">
      <arglist>
        <arg type="color"/>
      </arglist>
      <description>set color for the grid.</description>
      <digest>set grid color</digest>
    </method>
    <method name="/curve/number">
      <arglist>
        <arg type="int"/>
      </arglist>
      <description>set the number of curves.</description>
      <digest>set number of curves</digest>
    </method>
    <method name="/curve/[index]/color">
      <arglist>
        <arg type="color"/>
      </arglist>
      <description>set color for the i-th curve.</description>
      <digest>set curve color</digest>
    </method>
    <method name="/curve/[index]/visible">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set visibility for the i-th curve.</description>
      <digest>set curve visibility</digest>
    </method>
    <method name="/curve/[index]/thickness">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set thickness for the i-th curve.</description>
      <digest>set curve thickness</digest>
    </method>
    <method name="/curve/[index]/normalize">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set normalization for the i-th curve.</description>
      <digest>set curve normalization</digest>
    </method>
    <method name="/post/version">
      <description>print the version in the Max Console.</description>
      <digest>post version</digest>
    </method>
    <method name="/post/version">
      <arglist>
        <arg type="details"/>
      </arglist>
      <description>print detailed version in the Max Console.</description>
      <digest>post version</digest>
    </method>
    <method name="/post/doc">
      <description>print the help documentation in the Max Console.</description>
      <digest>post documentation</digest>
    </method>
    <method name="/post/state">
      <description>print the OSC status in the Max Console.</description>
      <digest>post current state</digest>
    </method>
    <method name="/preset/load">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>load a preset from file. Supported file extensions : '.txt' for human-readable OSC text file, '.osc' for binary encoded OSC file, '.coll' for human-readable Max coll file (compatible with the <o>coll</o> object). '.txt' is the default file format. You can specify the fullpath of the file, or only its filename if the file is inside Max search path.</description>
      <digest>load preset</digest>
    </method>
    <method name="/preset/load">
      <description>open a user dialog to load a preset file. Supported file extensions : '.txt' for human-readable OSC text file, '.osc' for binary encoded OSC file, '.coll' for human-readable Max coll file (compatible with the <o>coll</o> object). '.txt' is the default file format.</description>
      <digest>load preset</digest>
    </method>
    <method name="/preset/export">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>export a preset to file. Supported file extensions : '.txt' for human-readable OSC text file, '.osc' for binary encoded OSC file, '.coll' for human-readable Max coll file (compatible with the <o>coll</o> object). '.txt' is the default file format. If the file extension is not provided, '.txt' will be used by default.  If the destination folder is not provided, the file will be saved in your home folder (/Users/yourlogin).</description>
      <digest>export preset</digest>
    </method>
    <method name="/preset/export">
      <description>open a user dialog to export a preset to file. Supported file extensions : '.txt' for human-readable OSC text file, '.osc' for binary encoded OSC file, '.coll' for human-readable Max coll file (compatible with the <o>coll</o> object). '.txt' is the default file format.</description>
      <digest>export preset</digest>
    </method>
    <method name="/status">
      <description>open the status window and bring it to front.</description>
      <digest>open status window</digest>
    </method>
    <method name="/status/open">
      <description>open the status window and bring it to front.</description>
      <digest>open status window</digest>
    </method>
    <method name="/status/close">
      <description>close the status window.</description>
      <digest>close status window</digest>
    </method>
    <method name="/status/openorclose">
      <description>open the status window if it was closed; close it if it was opened.</description>
      <digest>open status window</digest>
    </method>
    <method name="/status/font/size">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the font size of the status window.</description>
      <digest>font size for status window</digest>
    </method>
    <method name="/status/floating">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>make the status window 'floating' (i.e. always on top of other windows).</description>
      <digest>statuswindow floating</digest>
    </method>
    <method name="/help">
      <description>open the help window and bring it to front.</description>
      <digest>open help window</digest>
    </method>
    <method name="/help/open">
      <description>open the help window and bring it to front.</description>
      <digest>open help window</digest>
    </method>
    <method name="/help/close">
      <description>close the help window.</description>
      <digest>close help window</digest>
    </method>
    <method name="/help/openorclose">
      <description>open the help window if it was closed; close it if it was opened.</description>
      <digest>open help window</digest>
    </method>
    <method name="/help/font/size">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the font size of the help window.</description>
      <digest>font size for help window</digest>
    </method>
    <method name="/help/floating">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>make the help window 'floating' (i.e. always on top of other windows).</description>
      <digest>helpwindow floating</digest>
    </method>
    <method name="/snapshot">
      <description>open the snapshot window and bring it to front.</description>
      <digest>open snapshot window</digest>
    </method>
    <method name="/snapshot/open">
      <description>open the snapshot window and bring it to front.</description>
      <digest>open snapshot window</digest>
    </method>
    <method name="/snapshot/close">
      <description>close the snapshot window.</description>
      <digest>close snapshot window</digest>
    </method>
    <method name="/snapshot/openorclose">
      <description>open the snapshot window if it was closed; close it if it was opened.</description>
      <digest>open snapshot window</digest>
    </method>
    <method name="/snapshot/font/size">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the font size of the snapshot window.</description>
      <digest>font size for snapshot window</digest>
    </method>
    <method name="/snapshot/floating">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>make the snapshot window 'floating' (i.e. always on top of other windows).</description>
      <digest>snapshotwindow floating</digest>
    </method>
    <method name="/status/copytoclipboard">
      <description>copy the status to (the OS) clipboard.</description>
      <digest>copy status to clipboard</digest>
    </method>
    <method name="/status/copytoclipboard">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>copy the status to (the OS) clipboard, and specify the end-of-line character (e.g. ',').</description>
      <digest>copy status to clipboard</digest>
    </method>
    <method name="/dump">
      <description>dump the complete state of the object over the rightmost outlet (a.k.a. dump outlet).</description>
      <digest>dump state</digest>
    </method>
    <method name="/dump">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>dump a subset of the state of the object over the rightmost outlet. See spat5.tuto-dump-1.maxpat for usage examples.</description>
      <digest>dump state</digest>
    </method>
    <method name="/snapshot/deleteall">
      <description>delete all the snapshots currently in memory.</description>
      <digest>clear snapshots</digest>
    </method>
    <method name="/snapshot/add">
      <description>create a new snapshot with the current state.</description>
      <digest>add a new snapshot</digest>
    </method>
    <method name="/snapshot/add">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>create a new snapshot with the current state, and set its name.</description>
      <digest>add a new snapshot</digest>
    </method>
    <method name="/snapshot/[index]/store">
      <description>store the current state in the i-th snapshot (in memory).</description>
      <digest>store snapshot</digest>
    </method>
    <method name="/snapshot/[index]/recall">
      <description>recall the current state from the i-th snapshot.</description>
      <digest>recall snapshot</digest>
    </method>
    <method name="/snapshot/[index]/jump">
      <description>immediately recall the current state from the i-th snapshot (ignoring recall time).</description>
      <digest>immediately recall snapshot</digest>
    </method>
    <method name="/snapshot/[index]/name">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set the name of the i-th snapshot.</description>
      <digest>set snapshot name</digest>
    </method>
    <method name="/snapshot/interpolate">
      <arglist>
        <arg type="int][int][number"/>
      </arglist>
      <description>interpolate between the i-th and j-th snapshots.</description>
      <digest>interpolate between two snapshots</digest>
    </method>
    <method name="/snapshot/interpolate">
      <arglist>
        <arg type="string][string][number"/>
      </arglist>
      <description>interpolate between two snapshots, given their names.</description>
      <digest>interpolate between two snapshots</digest>
    </method>
    <method name="/snapshot/[index]/delete">
      <description>delete the i-th snapshot.</description>
      <digest>delete snapshot</digest>
    </method>
    <method name="/snapshot/[index]/copytoclipboard">
      <description>copy the i-th snapshot to (the OS) clipboard.</description>
      <digest>copy snapshot to clipboard</digest>
    </method>
    <method name="/snapshot/[index]/copytoclipboard">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>copy the i-th snapshot to (the OS) clipboard, and specify the end-of-line character (e.g. ',').</description>
      <digest>copy snapshot to clipboard</digest>
    </method>
    <method name="/snapshot/[index]/export">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>export the i-th snapshot to file.</description>
      <digest>export snapshot</digest>
    </method>
    <method name="/snapshot/[index]/export/content">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>export the content of the i-th snapshot to file.</description>
      <digest>export snapshot content</digest>
    </method>
    <method name="/snapshot/export">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>export all snapshots to file.</description>
      <digest>export snapshots</digest>
    </method>
    <method name="/snapshot/import">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>import all snapshots from file.</description>
      <digest>export snapshots</digest>
    </method>
    <method name="/snapshot/recall/next">
      <description>recall the next snapshot.</description>
      <digest>recall next snapshot</digest>
    </method>
    <method name="/snapshot/recall/previous">
      <description>recall the previous snapshot.</description>
      <digest>recall previous snapshot</digest>
    </method>
    <method name="/snapshot/jump/next">
      <description>immediately recall the next snapshot (ignoring recall time).</description>
      <digest>immediately recall next snapshot</digest>
    </method>
    <method name="/snapshot/jump/previous">
      <description>immediately recall the previous snapshot (ignoring recall time).</description>
      <digest>immediately recall previous snapshot</digest>
    </method>
    <method name="/snapshot/recall">
      <arglist>
        <arg type="int"/>
      </arglist>
      <description>recall the i-th snapshot.</description>
      <digest>recall i-th snapshot</digest>
    </method>
    <method name="/snapshot/jump">
      <arglist>
        <arg type="int"/>
      </arglist>
      <description>immediately recall the i-th snapshot (ignoring recall time).</description>
      <digest>immediately recall i-th snapshot</digest>
    </method>
    <method name="/snapshot/recall/bytitle">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>recall a snapshot by title/name.</description>
      <digest>recall snapshot by title</digest>
    </method>
    <method name="/snapshot/jump/bytitle">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>immediately recall a snapshot by title/name (ignoring recall time).</description>
      <digest>immediately recall snapshot by title</digest>
    </method>
    <method name="/snapshot/lock">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>lock edition of the snapshots.</description>
      <digest>lock snapshots</digest>
    </method>
    <method name="/snapshot/renumber">
      <description>renumber the snapshots (their OSC pattern) based on their position.</description>
      <digest>renumber snapshots</digest>
    </method>
    <method name="/snapshot/sort">
      <description>sort the snapshots alphabetically (based on their titles).</description>
      <digest>sort snapshots alphabetically</digest>
    </method>
    <method name="/window/title">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set the window title (in the window titlebar).</description>
      <digest>set the window title (in the window titlebar)</digest>
    </method>
    <method name="/window/visible">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set the window visibility.</description>
      <digest>set the window visibility</digest>
    </method>
    <method name="/window/moveable">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set the window movability.</description>
      <digest>set the window movability</digest>
    </method>
    <method name="/window/resizable">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set the window resizability.</description>
      <digest>set the window resizability</digest>
    </method>
    <method name="/window/enable">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable/disable the window.</description>
      <digest>enable/disable the window</digest>
    </method>
    <method name="/window/background/color">
      <arglist>
        <arg type="color"/>
      </arglist>
      <description>set the window background color.</description>
      <digest>set the window background color</digest>
    </method>
    <method name="/window/background/transparency">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the window transparency (in %).</description>
      <digest>set the window transparency (in %)</digest>
    </method>
    <method name="/window/opaque">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set the window opaque flag (optimize repaint efficiency).</description>
      <digest>set the window opaque flag (optimize repaint efficiency)</digest>
    </method>
    <method name="/window/fullscreen">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable/disable fullscreen mode.</description>
      <digest>enable/disable fullscreen mode</digest>
    </method>
    <method name="/window/minimise">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>minimize the window.</description>
      <digest>minimize the window</digest>
    </method>
    <method name="/window/open">
      <description>open the window (and bring it to front).</description>
      <digest>open the window (and bring it to front)</digest>
    </method>
    <method name="/window/close">
      <description>close the window.</description>
      <digest>close the window</digest>
    </method>
    <method name="/window/openorclose">
      <description>open the window if it was closed; close it if it was opened.</description>
      <digest>open the window if it was closed; close it if it was opened</digest>
    </method>
    <method name="/window/size">
      <arglist>
        <arg type="number][number"/>
      </arglist>
      <description>set the window size (width, height) (in pixels).</description>
      <digest>set the window size (width, height) (in pixels)</digest>
    </method>
    <method name="/window/width">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the window width (in pixels).</description>
      <digest>set the window width (in pixels)</digest>
    </method>
    <method name="/window/height">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the window height (in pixels).</description>
      <digest>set the window height (in pixels)</digest>
    </method>
    <method name="/window/bounds">
      <arglist>
        <arg type="number][number][number][number"/>
      </arglist>
      <description>set the window bounds (top left position, width, height) (in pixels).</description>
      <digest>set the window bounds (top left position, width, height) (in pixels)</digest>
    </method>
    <method name="/window/topleft">
      <arglist>
        <arg type="number][number"/>
      </arglist>
      <description>set the window top left position (in pixels).</description>
      <digest>set the window top left position (in pixels)</digest>
    </method>
    <method name="/window/centre">
      <description>open the window, centering it on the screen.</description>
      <digest>open the window, centering it on the screen</digest>
    </method>
    <method name="/window/rendering/engine">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set the graphical rendering engine of the window.</description>
      <digest>set the graphical rendering engine of the window</digest>
    </method>
    <method name="/window/fps/visible">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>display the FPS performances of the window.</description>
      <digest>display the FPS performances of the window</digest>
    </method>
    <method name="/window/scale">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the global scale factor of the window (in %).</description>
      <digest>set the global scale factor of the window (in %)</digest>
    </method>
    <method name="/window/floating">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>make the window 'floating' (always on top).</description>
      <digest>make the window 'floating' (always on top)</digest>
    </method>
    <method name="/window/hidesondeactivate">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>make the window 'hides on deactivate' (when always on top).</description>
      <digest>make the window 'hides on deactivate' (when always on top)</digest>
    </method>
    <method name="/window/buttons/close">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable/disable the close button (in the window titlebar).</description>
      <digest>enable/disable the close button (in the window titlebar)</digest>
    </method>
    <method name="/window/buttons/minimise">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable/disable the minimise button (in the window titlebar).</description>
      <digest>enable/disable the minimise button (in the window titlebar)</digest>
    </method>
    <method name="/window/buttons/maximise">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable/disable the maximise button (in the window titlebar).</description>
      <digest>enable/disable the maximise button (in the window titlebar)</digest>
    </method>
    <method name="/window/export/image">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>export the window as an image file (png or jpeg).</description>
      <digest>export the window as an image file (png or jpeg)</digest>
    </method>
  </methodlist>
  <seealsolist>
    <seealso name="plot~"/>
    <seealso name="spat5.plot"/>
    <seealso name="spat5.overview"/>
  </seealsolist>
</c74object>

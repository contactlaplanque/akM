<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- created by libisp v5.0.0 - 29/12/2017 - 19h53m56s -->

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>


<c74object name="spat5.hoa.scope~" module="spat5">
  <digest>HOA metering</digest>
  <description>spat5.hoa.meter~.<br/><br/></description>
  <inletlist>
  </inletlist>
  <outletlist>
  </outletlist>
  <objarglist>
  </objarglist>
  <attributelist>
    <attribute name="dimension" type="int" set="1" get="1" size="1">
      <description>The <m> dimension </m> attribute represents the dimension of the Ambisonic stream: either 2D or 3D.</description>
    </attribute>
    <attribute name="order" type="int" set="1" get="1" size="1">
      <description>The <m> order </m> attribute represents the Ambisonic order of the stream. <br/>For 2D Ambisonic, the number of components is (2*order+1).<br/>For 3D Ambisonic, the number of components is (order+1)*(order+1).</description>
    </attribute>
  </attributelist>
  <methodlist>
    <method name="/post/version">
      <description>print the version in the Max Console.</description>
    </method>
    <method name="/post/doc">
      <description>print the help documentation in the Max Console.</description>
    </method>
    <method name="/post/state">
      <description>print the OSC status in the Max Console.</description>
    </method>
    <method name="/dump">
      <description>send the current state of the object through the dump outlet.</description>
    </method>
    <method name="/preset/load">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>load a preset from file (.txt, .osc).</description>
    </method>
    <method name="/preset/export">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>export a preset to file (.txt, .osc).</description>
    </method>
    <method name="/status">
      <description>open the status window and bring it to front.</description>
    </method>
    <method name="/status/open">
      <description>open the status window and bring it to front.</description>
    </method>
    <method name="/status/close">
      <description>close the status window.</description>
    </method>
    <method name="/status/openorclose">
      <description>open the status window if it was closed; close it if it was opened.</description>
    </method>
    <method name="/status/font/size">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the font size of the status window.</description>
    </method>
    <method name="/help">
      <description>open the help window and bring it to front.</description>
    </method>
    <method name="/help/open">
      <description>open the help window and bring it to front.</description>
    </method>
    <method name="/help/close">
      <description>close the help window.</description>
    </method>
    <method name="/help/openorclose">
      <description>open the help window if it was closed; close it if it was opened.</description>
    </method>
    <method name="/help/font/size">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the font size of the help window.</description>
    </method>
    <method name="/window/title">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set the window title.</description>
    </method>
    <method name="/window/visible">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set the window visibility.</description>
    </method>
    <method name="/window/moveable">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set the window movability.</description>
    </method>
    <method name="/window/resizable">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>set the window resizability.</description>
    </method>
    <method name="/window/enable">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable/disable the window.</description>
    </method>
    <method name="/window/background/color">
      <arglist>
        <arg type="color"/>
      </arglist>
      <description>set the window background color.</description>
    </method>
    <method name="/window/fullscreen">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>enable/disable fullscreen mode.</description>
    </method>
    <method name="/window/minimise">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>minimize the window.</description>
    </method>
    <method name="/window/open">
      <description>open the window.</description>
    </method>
    <method name="/window/close">
      <description>close the window.</description>
    </method>
    <method name="/window/openorclose">
      <description>open the window if it was closed; close it if it was opened.</description>
    </method>
    <method name="/window/size">
      <arglist>
        <arg type="number][number"/>
      </arglist>
      <description>set the window size.</description>
    </method>
    <method name="/window/width">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the window width.</description>
    </method>
    <method name="/window/height">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the window height.</description>
    </method>
    <method name="/window/bounds">
      <arglist>
        <arg type="number][number][number][number"/>
      </arglist>
      <description>set the window bounds.</description>
    </method>
    <method name="/window/topleft">
      <arglist>
        <arg type="number][number"/>
      </arglist>
      <description>set the window top left position.</description>
    </method>
    <method name="/window/centre">
      <description>open the window, centering it on the screen.</description>
    </method>
    <method name="/window/rendering/engine">
      <arglist>
        <arg type="string"/>
      </arglist>
      <description>set the graphical rendering engine of the window.</description>
    </method>
    <method name="/window/fps/visible">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>display the FPS performances of the window.</description>
    </method>
    <method name="/window/scale">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set the global scale factor of the window.</description>
    </method>
    <method name="/window/floating">
      <arglist>
        <arg type="boolean"/>
      </arglist>
      <description>make the window 'floating' (always on top).</description>
    </method>
  </methodlist>
  <seealsolist>
    <seealso name="spat5.hoa.encoder~"/>
    <seealso name="spat5.hoa.decoder~"/>
    <seealso name="spat5.hoa.sorting~"/>
    <seealso name="spat5.decoder~"/>
    <seealso name="spat5.hoa.display"/>
    <seealso name="spat5.hoa.display.embedded"/>
    <seealso name="spat5.hoa.map"/>
    <seealso name="spat5.multi.connect"/>
  </seealsolist>
</c74object>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- created by libisp v5.0.2 - 18-mar-2024 19:03:59 -->

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>


<c74object name="spat5.abs2rel" module="spat5">
  <digest>Conversion from absolute to relative coordinates</digest>
  <description><o>spat5.abs2rel</o> converts coordinates messages from absolute coordinates to relative coordinates (relative to the listener's position).<br/><br/></description>
  <inletlist>
  </inletlist>
  <outletlist>
  </outletlist>
  <objarglist>
  </objarglist>
  <attributelist>
    <attribute name="initwith" type="string" set="1" get="1" size="1">
      <description>The <m> initwith </m> attribute can be used to specify the initial state of the object. You should provide a list of comma-separated OSC commands. The list of messages should be quoted (with double quote character &quot;). This is similar to sending the list of commands via <o>loadbang</o> or <o>loadmess</o>.<br/> Have a look at the <i>spat5.tuto-osc-3.maxpat</i> example for further details.<br/> Note that the <m> initwith </m> attribute cannot be set via message, <o>attrui</o> or inspector; it must be typed directly within the object box.</description>
      <digest>initial state of the object</digest>
    </attribute>
  </attributelist>
  <methodlist>
    <method name="/listener/xyz">
      <arglist>
        <arg type="number][number][number"/>
      </arglist>
      <description>set the position of the listener using cartesian coordinates.</description>
      <digest>set listener position</digest>
    </method>
    <method name="/listener/aed">
      <arglist>
        <arg type="number][number][number"/>
      </arglist>
      <description>set the position of the listener using navigation coordinates (azimuth/elevation/distance).</description>
      <digest>set listener position</digest>
    </method>
    <method name="/listener/orientation">
      <arglist>
        <arg type="number][number][number][number"/>
      </arglist>
      <description>set listener orientation from quaternion (xyzw).</description>
      <digest>set listener orientation from quaternion (xyzw)</digest>
    </method>
    <method name="/listener/yaw">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set listener yaw angle (in deg), using Euler zyx convention.</description>
      <digest>set listener yaw angle (in deg), using Euler zyx convention</digest>
    </method>
    <method name="/listener/pitch">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set listener pitch angle (in deg), using Euler zyx convention.</description>
      <digest>set listener pitch angle (in deg), using Euler zyx convention</digest>
    </method>
    <method name="/listener/roll">
      <arglist>
        <arg type="number"/>
      </arglist>
      <description>set listener roll angle (in deg), using Euler zyx convention.</description>
      <digest>set listener roll angle (in deg), using Euler zyx convention</digest>
    </method>
    <method name="/clear">
      <description>reset state.</description>
      <digest>reset state</digest>
    </method>
  </methodlist>
  <seealsolist>
    <seealso name="spat5.viewer"/>
    <seealso name="spat5.converter"/>
    <seealso name="spat5.distance"/>
    <seealso name="spat5.binaural~"/>
    <seealso name="spat5.transform"/>
    <seealso name="spat5.oper"/>
    <seealso name="spat5.quat.fromeuler"/>
    <seealso name="spat5.quat.toeuler"/>
    <seealso name="spat5.quat.transform"/>
    <seealso name="spat5.trajectories"/>
    <seealso name="spat5.boids"/>
    <seealso name="spat5.overview"/>
  </seealsolist>
</c74object>
